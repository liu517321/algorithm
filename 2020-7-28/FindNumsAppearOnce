//num1,num2分别为长度为1的数组。传出参数 
//将num1[0],num2[0]设置为返回结果 
public class Solution { 
	public void FindNumsAppearOnce(int [] array,int num1[] , int num2[]) { 
		if(array == null || num1 == null || num2 == null){ 
			return; 
		}
		num1[0] = 0; 
		num2[0] = 0; 
		int result = array[0]; 
		//第一步，将所有数据进行异或 
		for(int i = 1; i < array.length; i++){ 
			result ^= array[i]; 
		}
		//第二步，根据题面，最终结果一定不为0，找到该数据第一个为1的比特位，从高向底 
		int length = Integer.SIZE; 
		//获取int有多少比特位 
		int flag = 1; 
		while(length >= 0){ 
			length -= 1; 
			if(((flag<<length) & result) != 0){ 
				flag <<= length; 
				break;
			} 
		}
		//第三步，分组 
		for(int i = 0; i < array.length; i++){ 
			if((array[i] & flag) == 0){ 
				num1[0] ^= array[i]; 
			}
			else{
				num2[0] ^= array[i]; 
			} 
		} 
	} 
}
